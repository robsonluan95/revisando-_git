## Dominando GIT

git init → Para iniciar iniciar o arquivo GIT

git status → mostra os arquivos a para serem enviados e modificados

git add nome → o arquivo que foi escolhido foi adicionado para ser adicionado ao commit ( quando ele é adicionado ele começa a ser monitorado pelo git) caso deseja que seja adicionado todos os arquivos fazendo git add .

No VScode os arquivos monitorados tem uma A ao lado e U caso não tenha sido adicionado

Após qualquer alteração e se chamarmos git status, ira aparecer um modified, com isso podemos fazer um git add novamente ou um git restore caso desejamos retornar o código ao estado anterior 

Um commit é salvo em repositório local, para enviar apenas 1 arquivo fazemos

git commit nome.txt -m “mensagem sobre o que foi feito”

o arquivo nome.txt é o que vai ser adicionado, ja o que estar entre aspas, é a mensagem da qual vai ser descrita para ele ser enviado! Após esse commit ele vai ficar salvo localmente pronto pra ser enviado para GitHub 

Podemos subir esse commit diretamente para o GutHub para isso fazemos 

git branch -M main

git branch → é o comando base, com ele podemos criar , litar e delete

-M → é um atalho para move(ou renomear) uma branch

main → é o nome dela

git remote add origin https://github.com/…

git remote é o comando para gerenciar os repositórios associados ao seu repositório local

add  é pra adicionar 

origin é o nome padrão 

https://github.com/… é a url

git push -u origin main

git push é para enviar as mudanças de códigos locais para remotas

-u é pra rastrear uma branch específica 

origin é o nome padrão 

main é o nome da branch local que você deseja enviar para a remota

git clone https://github/robsonluan95/revisando-_git.git  

git clone é para clonar

https://github/robsonluan95/revisando-_git.git é pra dizer qual link do repositório 

git clone https://github/robsonluan95/revisando-_git.git .   

adicionar o ponto no final para que seja clonado sem a pasta 

caso queiramos adicionar arquivos fazemos git add . após git commit -m “add funções” e apos git push

git pull → para fazer um o download de arquivos

git log → para ver qual foi o ultimo commit feito      

git checkout nomeDoArquivo → ele volta pra o jeito original

ignorando arquivos - para dont env e senhas basta criar um arquivo e com nome gitignore e dentro dele o nome dos arquivos e pastas 

![image.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/8d174488-8ca4-4aa0-86c4-2d5dbabec0a7/176e4dfc-628e-47e8-9b87-e07c2380ca9e/image.png)

add